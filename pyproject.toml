[tool.poetry]
name = "parallel-job"
version = "0.0.1"
description = "A versatile Python tool for running parallel jobs using different methods (e.g., joblib, multiprocessing) with a unified interface and built-in execution time measurement."
authors = ["rcmdnk <rcmdnk@gmail.com>"]
repository = "https://github.com/rcmdnk/parallel-job"
homepage = "https://github.com/rcmdnk/parallel-job"
readme = "README.md"
license = "apache-2.0"
keywords = [
    "parallel",
    "jobs",
    "joblib",
    "multiprocessing",
    "unified interface",
    "execution time",
    "benchmark",
    "performance",
    "concurrency",
    "Python"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: System :: Benchmark",
    "Topic :: System :: Distributed Computing",
    "Topic :: Utilities"
]

[tool.poetry.dependencies]
python = ">=3.14,<3.15"
matplotlib = "^3.9.0"
joblib = "^1.4.2"

[tool.poetry.group.dev.dependencies]
tomli = { version = "^2.0.1", python = "<3.11"}
pytest = "^8.0.0"
pytest-cov = "^7.0.0"
pytest-xdist = "^3.3.1"
pytest-benchmark = "^5.0.0"
pyproject-pre-commit = "^0.4.0"
gitpython = "^3.1.41"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = "-n auto"
testpaths = ["tests",]

[tool.black]
line-length = 79

[tool.autoflake]
remove-all-unused-imports = true
expand-star-imports = true
remove-duplicate-keys = true
remove-unused-variables = true

[tool.autopep8]
ignore = "E203,E501,W503"
recursive = true
aggressive = 3

[tool.isort]
profile = "black"
line_length = 79

[tool.flake8]
# E203 is not PEP8 compliant and black insert space around slice: [Frequently Asked Questions - Black 22.12.0 documentation](https://black.readthedocs.io/en/stable/faq.html#why-are-flake8-s-e203-and-w503-violated)
# E501: Line too long. Disable it to allow long lines of comments and print lines which black allows.
# E704: multiple statements on one line (def). This is inconsistent with black >= 24.1.1 (see ttps://github.com/psf/black/pull/3796)
# W503 is the counter part of W504, which follows current PEP8: [Line break occurred before a binary operator (W503)](https://www.flake8rules.com/rules/W503.html)
# D100~D106: Missing docstrings other than class (D101)
# D200 One-line docstring should fit on one line with quotes
# D401: First line should be in imperative mood
ignore = "E203,E501,E704,W503,D100,D102,D103,D104,D105,D106,D200,D401"
max-complexity = 10
docstring-convention = "numpy"

[tool.bandit]
skips = ["B301", "B403"]
exclude_dirs = ["tests"]

[tool.mypy]
files = ["src/**/*.py"]
strict = true
warn_return_any = false
ignore_missing_imports = true
scripts_are_modules = true
install_types = true
non_interactive = true
